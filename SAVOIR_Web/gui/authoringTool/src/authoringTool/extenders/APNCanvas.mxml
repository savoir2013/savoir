<?xml version="1.0" encoding="utf-8"?>

<!-- Licensed under Apache 2.0 -->
<!-- Copyright 2011, National Research Council of Canada -->
<!-- Property of Lakehead University -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" xmlns:extenders="authoringTool.extenders.*">
    	
       		
	<mx:Script>
		<![CDATA[
		    import mx.core.Application;
			import mx.collections.ArrayCollection;
			[Bindable]
			private var theConnections:ArrayCollection = new ArrayCollection();
			private var connectionsStrCollection:ArrayCollection = new ArrayCollection();
			[Bindable]
            private var apnNS:ArrayCollection = new ArrayCollection(
            [ {label:"SCENARIO_RESERVATION", data:1},
              {label:"CHRONOS_RESERVATION", data:2},
              {label:"HARMONY_RESERVATION", data:3},
            ]);
            
            [Bindable]
            private var apnNodes:ArrayCollection = new ArrayCollection(
            	[{label:"Fredericton", data:1},
              		{label:"Ottawa", data:2},
              		{label:"Sunnyvale", data:3},
              		{label:"Barcelona", data:4},
              		{label:"NRC-IIT", data:5},
              		{label:"CRC-BADLab", data:6},
              		{label:"CRC-FS", data:7},
              		{label:"Mcgill-Montreal", data:8},
              		{label:"Mcgill2-Montreal", data:9},
              		{label:"Sudbury", data:10},
              		{label:"Steve", data:11},
              		{label:"Stanford", data:12},
              		{label:"Toronto", data:13},
              		{label:"Thunderbay", data:14},
              		{label:"Montreal", data:15},
              		{label:"Banff", data:16},
              		{label:"CRC-Ottawa", data:17},
              		{label:"NOSM WEST", data:20},
              		{label:"NOSM EAST", data:21},
              		//add following sites for Hanxi Chronon test
              		{label:"Canarie Site 1", data:22},
              		{label:"Canarie Site 2", data:23},
              		{label:"NOSM Site 1", data:24},
              		{label:"NOSM Site 2", data:25},
              		{label:"CRCVlan1 Site 1", data:26},
              		{label:"CRCVlan1 Site 2", data:27},
              		{label:"CRCVlan2 Site 1", data:28},
              		{label:"CRCVlan2 Site 2", data:29},
             	]
            );
            
             private function handleAddConnection(event:MouseEvent):void{
            	var theConn:Connection = new Connection();
            	theConn.srcSiteSelectIndex = scenariosSesnSrcApnList.selectedIndex;
            	theConn.srcSite = scenariosSesnSrcApnList.selectedItem.label;
            	theConn.srcSiteId = scenariosSesnSrcApnList.selectedItem.data;
            	theConn.destSiteSelectIndex = scenariosSesnDestApnList.selectedIndex;
            	theConn.destSite = scenariosSesnDestApnList.selectedItem.label;
            	theConn.destSiteId = scenariosSesnDestApnList.selectedItem.data;
            	theConn.maxBW = maxBwTI.text;
            	theConn.minBW = minBwTI.text;
            	theConnections.addItem(theConn);
            	var theItemIndex:Number = theConnections.getItemIndex(theConn);
            	connTA.selectedIndex = theItemIndex;
            	updateAPNSettingInScenario();
            	//connTA.text = connTA.text + theConn.toConnectionString();
            }
            
            private function handleRemoveConnection(event:MouseEvent):void{
            	
            	var currentIndex:Number = connTA.selectedIndex;
            	//connectionsStrCollection.removeItemAt(currentIndex);
            	theConnections.removeItemAt(currentIndex);
            	updateAPNSettingInScenario();
//            	var index:Number = connTA.text.lastIndexOf("Source site");
//            	if(index != -1){
//            		connTA.text = connTA.text.substring(0,index);
//            	}
            }
            
            private function connectionObjToConnectionStr(item:Object):String{
            	var theConn:Connection = Connection(item);
            	return theConn.toConnectionString();
            }
            
            private function updateAPNSettingInScenario():void{
            	var currentAPNSetting:XML = <apn reservationMethod={apnSchList.selectedLabel}>
            	                            </apn>;
            	var theId:Number = 1;                            
            	for each(var theConn:Connection in this.theConnections){
            		theId = theConnections.getItemIndex(theConn);
            		currentAPNSetting.appendChild(XML(theConn.toConnectionXMLString(theId)));
            		
            	}                            
            	Application.application.apnSetting = currentAPNSetting;
            	trace(Application.application.apnSetting.toXMLString());
            }
            
            private function handleConnsListChange(event:Event):void{
            	var currentIndex:Number = connTA.selectedIndex;
            	var theConn:Connection = Connection(this.theConnections.getItemAt(currentIndex));
                scenariosSesnSrcApnList.selectedIndex = theConn.srcSiteSelectIndex;
            	scenariosSesnDestApnList.selectedIndex = theConn.destSiteSelectIndex;
            	maxBwTI.text = theConn.maxBW;
            	minBwTI.text = theConn.minBW;
            }
            
            private function handleChangeConnection(event:MouseEvent):void{
            	var currentIndex:Number = connTA.selectedIndex;
            	var changedConnection:Connection = new Connection();
            	changedConnection.srcSite = scenariosSesnSrcApnList.selectedItem.label;
            	changedConnection.srcSiteId = scenariosSesnSrcApnList.selectedItem.data;
            	changedConnection.destSite = scenariosSesnDestApnList.selectedItem.label;
            	changedConnection.destSiteId = scenariosSesnDestApnList.selectedItem.data;
            	changedConnection.maxBW = maxBwTI.text;
            	changedConnection.minBW = minBwTI.text;
            	this.theConnections.setItemAt(changedConnection,currentIndex);
            }
            
            public function initApnCas():void{
            	var currentAPNSetting:XML = Application.application.apnSetting;
            	if(currentAPNSetting == null){
            		return;
            	}
            	var resMethod:String = currentAPNSetting.@reservationMethod;
            	if(resMethod == "SCENARIO_RESERVATION"){
            		apnSchList.selectedIndex = 0;
            	}else if(resMethod == "CHRONOS_RESERVATION"){
            		apnSchList.selectedIndex = 1;
            	}else if(resMethod == "HARMONY_RESERVATION"){
            		apnSchList.selectedIndex = 2;
            	}
            	var conns:XMLList = currentAPNSetting.connection;
            	for each(var connXML:XML in conns){
            		var connObj:Connection = new Connection();
            		connObj.srcSite = connXML.sourceSite.@name;
            		connObj.srcSiteId = connXML.sourceSite.@id;
            		connObj.destSite = connXML.destSite.@name;
            		connObj.destSiteId = connXML.destSite.@id;
            		connObj.maxBW =  connXML.@maxBandwidth;
            		connObj.minBW = connXML.@minBandwidth;
            		this.theConnections.addItem(connObj);
            	}
            }
            
		]]>
	</mx:Script>
	<mx:VBox bottom="0" top="0" right="0" left="0">
	   
	   <mx:Spacer x="25" y="0" width="100%" height="5"/>
	   <mx:HBox width="100%">
	      <mx:Label text="APN Reservation Method: "/>
	      <mx:ComboBox id="apnSchList" visible="true" dataProvider="{apnNS}"/>
	   </mx:HBox>
	   <mx:Spacer width="100%" height="5"/>
	 <mx:HBox height="59">
	 	
	 	<mx:Label id="scenariosSesnSrcApnLbl" styleName="headingLabel"
	 	text="Source Site:"/>
	 	<mx:Spacer width="30" height="100%"/>
	  <!--<mx:List id="scenariosSesnSrcApnList" allowMultipleSelection="false" dataProvider="{apnNodes}"/>-->
	  <mx:ComboBox id="scenariosSesnSrcApnList" dataProvider="{apnNodes}"/>
	  <mx:Label id="scenariosSesnDestApnLbl" styleName="headingLabel"
	  text="Dest Site:"/>
	  <mx:Spacer width="30" height="100%"/>
	  <!--<mx:List id="scenariosSesnDestApnList" allowMultipleSelection="false" dataProvider="{apnNodes}"/>-->
	  <mx:ComboBox id="scenariosSesnDestApnList" dataProvider="{apnNodes}"/>
	 </mx:HBox>
	 <mx:VBox height="59" width="242">
	   <mx:HBox width="100%">
	   	 <mx:Label text="Max BW(MB):" width="50%"/>
	   	 <mx:TextInput id="maxBwTI" width="50%"/>
	   </mx:HBox>
	   <mx:HBox width="100%">
	   	 <mx:Label text="Min BW(MB):" width="50%"/>
	   	 <mx:TextInput id="minBwTI" width="50%"/>
	   </mx:HBox>
	 
	 </mx:VBox>
	<mx:HBox>
	   <mx:Button label="Add Connection" click="handleAddConnection(event)"/>
	   <mx:Button label="Remove Connection" click="handleRemoveConnection(event)"/>
	   <mx:Button label="Change Connection" click="handleChangeConnection(event)"/>
	</mx:HBox>
	<mx:Spacer width="100%" height="10"/>
	<mx:Canvas width="100%" height="100%">
		
	
	<mx:List id="connTA" labelFunction="{connectionObjToConnectionStr}" dataProvider="{theConnections}" change="handleConnsListChange(event)" borderThickness="2" right="2" left="2" top="2" bottom="2"/>
	</mx:Canvas>
	</mx:VBox>
	
</mx:Canvas>
