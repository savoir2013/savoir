<?xml version="1.0" encoding="UTF-8"?>

<!-- Licensed under Apache 2.0 -->
<!-- Copyright 2011, National Research Council of Canada -->
<!-- Property of Lakehead University -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:cxf="http://cxf.apache.org/core" 
	xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	xmlns:sec-conf="http://cxf.apache.org/configuration/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-2.5.xsd 
		http://cxf.apache.org/jaxws 
			http://cxf.apache.org/schemas/jaxws.xsd
		http://cxf.apache.org/transports/http/configuration 
			http://cxf.apache.org/schemas/configuration/http-conf.xsd
		http://cxf.apache.org/configuration/security
			http://cxf.apache.org/schemas/configuration/security.xsd">

	<context:property-placeholder 
		location="classpath:webbroker.properties"/>
	
	<!--
		<bean id="logInbound"
		class="org.apache.cxf.interceptor.LoggingInInterceptor" /> <bean
		id="logOutbound"
		class="org.apache.cxf.interceptor.LoggingOutInterceptor" /> <cxf:bus>
		<cxf:inInterceptors> <ref bean="logInbound" /> </cxf:inInterceptors>
		<cxf:outInterceptors> <ref bean="logOutbound" />
		</cxf:outInterceptors> <cxf:inFaultInterceptors> <ref
		bean="logOutbound" /> </cxf:inFaultInterceptors> </cxf:bus>
	-->
	
	<!-- 
	<bean id="oAuthRelayHttpAuthSupplier" 
 		class="ca.gc.nrc.iit.oauth.consumer.cxf.RelayHttpAuthSupplier"/>
 	 -->
 	
 	<bean id="userValidator" class="OAuth.Validator">
 		<property name="oaService" ref="oauthProviderClient"/>
 	</bean>

	<http-conf:conduit name=".http-conduit">
		<!-- Enables HTTP Basic security -->
 		<http-conf:authorization>
 			<sec-conf:UserName>${webbroker.username}</sec-conf:UserName>
 			<sec-conf:Password>${webbroker.password}</sec-conf:Password>
 		</http-conf:authorization>
 		<!-- Needed for HTTPS services -->
 		<!-- 
 		<http-conf:tlsClientParameters disableCNCheck="true">
 			<sec-conf:cipherSuitesFilter>
 				<sec-conf:include>.*_EXPORT_.*</sec-conf:include>
				<sec-conf:include>.*_EXPORT1024_.*</sec-conf:include>
				<sec-conf:include>.*_WITH_DES_.*</sec-conf:include>
				<sec-conf:exclude>.*_WITH_NULL_.*</sec-conf:exclude>
				<sec-conf:exclude>.*_DH_anon_.*</sec-conf:exclude>
			</sec-conf:cipherSuitesFilter> 			
 			<sec-conf:trustManagers>
 				<sec-conf:keyStore type="JKS" password="password123!" 
 						file="src/clientKeystore"/>
 			</sec-conf:trustManagers>
 		</http-conf:tlsClientParameters>
 		 -->
		<http-conf:client ReceiveTimeout="240000" />
	</http-conf:conduit>

	<jaxws:client id="resourceMgrClient"
		serviceClass="ca.gc.nrc.iit.savoir.resourceMgmt.ResourceMgr"
		address="http://localhost:8080/SAVOIR_MgmtServices/services/ResourceManagerWS" />

	<jaxws:client id="sessionMgrClient"
		serviceClass="ca.gc.nrc.iit.savoir.sessionMgmt.SessionMgr"
		address="http://localhost:8080/SAVOIR_MgmtServices/services/SessionManagerWS">
	</jaxws:client>
	
	<jaxws:client id="scenarioMgrClient"
		serviceClass="ca.gc.nrc.iit.savoir.scenarioMgmt.ScenarioMgr"
		address="http://localhost:8080/SAVOIR_MgmtServices/services/ScenarioManagerWS">
	</jaxws:client>

	<jaxws:client id="userMgrClient" serviceClass="ca.gc.nrc.iit.savoir.userMgmt.UserMgr"
		address="http://localhost:8080/SAVOIR_MgmtServices/services/UserManagerWS" />
	
	<jaxws:client id="credMgrClient" serviceClass="ca.gc.nrc.iit.savoir.credMgmt.CredMgr"
		address="http://localhost:8080/SAVOIR_MgmtServices/services/CredentialManagerWS" />
	
	<!-- 
	<jaxws:client id="userMgrClient" serviceClass="ca.gc.nrc.iit.savoir.userMgmt.UserMgr"
		address="http://198.164.40.210:8080/SAVOIR_MgmtServices/services/UserManagerWS" />
	
	<jaxws:client id="credMgrClient" serviceClass="ca.gc.nrc.iit.savoir.credMgmt.CredMgr"
		address="http://198.164.40.210:8080/SAVOIR_MgmtServices/services/CredentialManagerWS" />
	-->	
	<jaxws:client id="oauthProviderClient" serviceClass="ca.gc.nrc.iit.savoir.oAuthProvider.OAuthProviderService"
		address="http://localhost:8080/SAVOIR_MgmtServices/services/oAuthProviderWS" />	
		
	<!-- Added to allow the Webbroker to pass the message handling logic to the threshold manager --> 
	<jaxws:client id="thresholdMgrClient" serviceClass="ca.gc.nrc.iit.savoir.thresholdMgmt.ThresholdMgr"
		address="http://localhost:8080/SAVOIR_MgmtServices/services/ThresholdManagerWS"/>		

<!--	<jaxws:client id="oauthProviderClient" serviceClass="ca.gc.nrc.iit.oauth.provider.ws.OAuthProviderService"-->
<!--		address="http://198.164.40.185:9004/SAVOIR_MgmtServices/services/oAuthProviderWS" />-->
	
<!--	<jaxws:client id="oauthProviderClient" serviceClass="ca.gc.nrc.iit.oauth.provider.ws.OAuthProviderService"-->
<!--		address="http://198.164.40.185:9004/Savoir_OAuthProviderServices/services/OAuthProviderService" />-->
<!-- commented out 09-08-09 we would not directly use persistence WS
	<jaxws:client id="persistenceWsClient"
		serviceClass="ca.gc.nrc.iit.savoir.persistence.ws.PersistenceService"
		address="http://198.164.40.210:8080/SAVOIR_PersistenceService/services/PersistenceWS" />		
				 		 
--> 

</beans>

